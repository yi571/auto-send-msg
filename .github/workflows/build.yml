name: 'release'

on: workflow_dispatch


jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: Check Release Version
        uses: thebongy/version-check@v1
        with:
          file: Cargo.toml
          tagFormat: ${version}
        id: version_check_staging
      - name: get version
        run: echo "PACKAGE_VERSION=${{steps.version_check_staging.outputs.releaseVersion}}" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `auto-send-msg-v${process.env.PACKAGE_VERSION}`,
              name: `auto-send-msg v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })

            return data.id
  windows-msvc-release:
    needs: create-release
    name: release windows msvc
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: get version
        run: echo "PACKAGE_VERSION=${{steps.version_check_staging.outputs.releaseVersion}}" >> $GITHUB_ENV
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: tar --directory=target/release -cf archive.tar.gz auto-send-msg.exe
      - name: upload
        run: |
          $id = gh api -H "Accept: application/vnd.github+json" /repos/yi571/auto-send-msg/releases/tags/auto-send-msg-v${ process.env.PACKAGE_VERSION } --jq .id
          curl --fail-with-body -sS  -X POST --data-binary "@archive.tar.gz" -H 'Content-Type: application/octet-stream' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' "https://uploads.github.com/repos/yi571/auto-send-msg/releases/$id/assets?name=auto-send-msg_${{ github.ref_name }}_x86_64-pc-windows-msvc.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ needs.create-release.outputs.release_id }}
      
